#!/bin/bash

# == Synopsis
#
# This script takes care of the creation of symbolic links to the weekly
# CDOT report delivered via e-mail from the OCUM for CDOT on DFM-C.wc1
# host server system.
#
#
# == Author
# Friendly half-blind Lead Storage/Systems Administrator with smiles
#
# $Id: mk_sym_links 10801 2017-10-11 00:59:42Z fma $

PATH=/bin:/usr/bin

SRC_PATH='no_path'
DST_PATH='/var/www/html/dfm_reports'
data_date='0000-00'
msg=''


function show_help()
{
   echo -e "\n$0 <option>"
   echo -e "\t-h\tthis help"
   echo -e "\t-s\tdirectory with data file, e.g., /var/www/html/dfm_reports/2017-09/"
   echo -e "\t-d\tdirectory for symbolic links (default: /var/www/html/dfm_reports/)"
   echo
}

function bailout()
{
   echo -e "$msg"
   show_help
   exit 1
}


# parse options
while getopts ":d:hs:" opt ; do
   case $opt in
      h)
         show_help
         exit 2
         ;;
      d)
         DST_PATH="$OPTARG"
         ;;
      s)
         SRC_PATH="$OPTARG"
         ;;
      \?)
         echo "Invalid option: -${OPTARG}" >&2
         show_help
         exit 1
         ;;
      :)
         echo "Option -$OPTARG requires an argument." >&2
         show_help
         exit 1
         ;;
      *)
         show_help
         exit 2
         ;;
   esac
done

if [[ ! -d $SRC_PATH ]] ; then
   msg="\nCRITICAL:  ${SRC_PATH} is not a valid directory."
   bailout
else
   SRC_PATH=$(echo $SRC_PATH | sed 's/\/$//')
   chmod 644 $SRC_PATH/*
fi

if [[ ! -d $DST_PATH ]] ; then
   msg="\nCRITICAL:  ${DST_PATH} is not a valid directory."
   bailout
else
   DST_PATH=$(echo $DST_PATH | sed 's/\/$//')
fi


# get date of newest data file
data_date=$(ls -1 $SRC_PATH | awk -F'_' '{ print $2 }' | sort -r | head -1)
if [[ x$data_date == 'x' ]] ; then
   msg='\nCRITICAL:  Unable to obtain data_date'
   bailout
fi

# list of file names
cd $DST_PATH
for i in $(ls -1 $SRC_PATH/*$data_date* | awk -F'/' '{ print $NF }' | \
awk -F'_' '{ print $1 }') ; do
   [[ -L $i ]] && rm $i
   ln -s $SRC_PATH/"$i"_$data_date* $i
done

